# Atas Sacramentais (ActaSync)

[cite_start]Aplicativo para criar, gerenciar e compartilhar atas de reuni√£o sacramental, funcionando como um **Progressive Web App (PWA)**[cite: 3, 4]. [cite_start]A solu√ß√£o √© totalmente gratuita, utilizando **React** e **Firebase** para gerenciamento de dados, autentica√ß√£o e hospedagem[cite: 5].

---

## üöÄ Funcionalidades Principais

* [cite_start]**PWA**: Acess√≠vel pelo navegador e instal√°vel em dispositivos m√≥veis e desktops[cite: 4].
* [cite_start]**Gerenciamento de Atas**: Formul√°rio completo para registrar todos os detalhes da reuni√£o[cite: 22, 210].
* [cite_start]**Gera√ß√£o de PDF**: Exporte a ata completa em um arquivo PDF para impress√£o ou compartilhamento[cite: 6, 239].
* [cite_start]**Mensagens Autom√°ticas**: Gere e compartilhe convites ou confirma√ß√µes para os oradores, com pronomes autom√°ticos e links de estudo[cite: 6, 141, 143].
* [cite_start]**Calend√°rio**: Visualize a lista de oradores e temas dos pr√≥ximos domingos[cite: 6].
* [cite_start]**Banco de Dados Integrado**: Mantenha um cadastro de membros e hinos para agilizar o preenchimento da ata[cite: 24, 25, 129].

---

## üõ†Ô∏è Tecnologias Utilizadas

* [cite_start]**Frontend**: React (JavaScript, Hooks) [cite: 10]
* [cite_start]**Backend & DB**: Firebase (Firestore, Authentication, Hosting) [cite: 11, 12, 13]
* [cite_start]**Gera√ß√£o de PDF**: `@react-pdf/renderer` [cite: 14]
* **Gerenciamento de Pacotes**: npm
* [cite_start]**Versionamento**: Git e GitHub [cite: 15]

---

## üìÇ Estrutura do Projeto

* `/src`: Cont√©m todo o c√≥digo-fonte da aplica√ß√£o.
    * [cite_start]`/components`: Componentes da interface do usu√°rio (`AtaForm.jsx`, `Login.jsx`, etc.)[cite: 21].
    * [cite_start]`/utils`: Fun√ß√µes utilit√°rias e l√≥gicas de neg√≥cio (`pronome.js`, `mensagemConvite.js`, etc.)[cite: 32].
    * [cite_start]`/firebase`: Configura√ß√£o do Firebase (`firebase-config.js`)[cite: 29].
    * `App.jsx`, `index.jsx`, `style.css`: Arquivos principais da aplica√ß√£o.
* `/public`: Arquivos est√°ticos como o `index.html` e o `manifest.json`.

---

## üèÉ Como Rodar o Projeto

### 1. Pr√©-requisitos

* Node.js e npm instalados.
* Uma conta no Firebase com um projeto configurado (Autentica√ß√£o e Firestore habilitados).

### 2. Configura√ß√£o

1.  Clone o reposit√≥rio:
    ```bash
    git clone [https://github.com/seu-usuario/seu-repositorio.git](https://github.com/seu-usuario/seu-repositorio.git)
    cd seu-repositorio
    ```
2.  Crie o arquivo de ambiente `.env` na raiz do projeto e adicione suas credenciais do Firebase:
    ```
    REACT_APP_FIREBASE_API_KEY="SUA_API_KEY"
    REACT_APP_FIREBASE_AUTH_DOMAIN="SEU_AUTH_DOMAIN"
    REACT_APP_FIREBASE_PROJECT_ID="SEU_PROJECT_ID"
    REACT_APP_FIREBASE_STORAGE_BUCKET="SEU_STORAGE_BUCKET"
    REACT_APP_FIREBASE_MESSAGING_SENDER_ID="SEU_MESSAGING_SENDER_ID"
    REACT_APP_FIREBASE_APP_ID="SEU_APP_ID"
    ```
3.  Instale as depend√™ncias:
    ```bash
    npm install
    ```

### 3. Execu√ß√£o

* Para iniciar o servidor de desenvolvimento:
    ```bash
    npm start
    ```
    O aplicativo ser√° aberto em `http://localhost:3000`.

* Para criar uma vers√£o de produ√ß√£o otimizada:
    ```bash
    npm run build
    ```

---

## üåê Implanta√ß√£o (Deploy)

Para publicar o seu aplicativo no Firebase Hosting, execute os seguintes comandos no terminal:

1.  Fa√ßa login no Firebase CLI:
    ```bash
    firebase login
    ```
2.  Inicie o projeto do Firebase (se for a primeira vez):
    ```bash
    firebase init
    ```
3.  Fa√ßa o deploy da sua aplica√ß√£o:
    ```bash
    firebase deploy
    ```