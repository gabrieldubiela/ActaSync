import { getPronome } from './pronome';

/**
 * Gera mensagem de confirma√ß√£o para orador
 * @param {Object} orador - Dados do orador
 * @param {Object} reuniao - Dados da reuni√£o
 * @param {Object} config - Configura√ß√µes da ala/estaca
 * @returns {string} - Mensagem de confirma√ß√£o formatada
 */
export const gerarMensagemConfirmacao = (orador, reuniao, config = {}) => {
  const pronome = orador.membro ? getPronome(orador.membro) : 'irm√£o';
  const nome = orador.nome_manual || orador.membro?.nome || orador.nome;
  const dataFormatada = new Date(reuniao.data).toLocaleDateString('pt-BR', {
    weekday: 'long',
    day: 'numeric',
    month: 'long'
  });
  
  const ala = config.ala || 'Nossa Ala';

  const mensagem = `${pronome} ${nome},

Por favor, confirme sua participa√ß√£o na reuni√£o sacramental de ${dataFormatada}.

üìù **Seu subtema:** ${orador.subtema}

Responda com:
‚úÖ **SIM** - se poder√° participar
‚ùå **N√ÉO** - se n√£o poder√° participar

Aguardamos sua confirma√ß√£o at√© quinta-feira.

Obrigado!
Bispado da ${ala}`;

  return mensagem;
};

/**
 * Gera mensagem de confirma√ß√£o simplificada (para WhatsApp)
 * @param {Object} orador - Dados do orador
 * @param {Object} reuniao - Dados da reuni√£o
 * @returns {string} - Mensagem simplificada
 */
export const gerarMensagemConfirmacaoSimples = (orador, reuniao) => {
  const pronome = orador.membro ? getPronome(orador.membro) : 'irm√£o';
  const nome = orador.nome_manual || orador.membro?.nome || orador.nome;
  const dataFormatada = new Date(reuniao.data).toLocaleDateString('pt-BR');

  return `${pronome} ${nome}, confirme sua participa√ß√£o na reuni√£o sacramental de ${dataFormatada}. Subtema: "${orador.subtema}". Responda SIM ou N√ÉO. Obrigado!`;
};